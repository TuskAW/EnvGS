# Take D-NeRF as an simple design example
runner_cfg:
    epochs: 1600
    eval_ep: 20
    optimizer_cfg:
        lr: 5.0e-4
    moderator_cfg:
        type: DatasetCenterCropRatioModerator
        milestones: [[0, 0.5], [500, 1.0]]
    scheduler_cfg:
        type: ExponentialLR
    decay_epochs: 1000

dataloader_cfg:
    dataset_cfg:
        n_rays: 512
    sampler_cfg:
        type: IterationBasedRandomSampler
        num_samples: 800000 # !: CONFIG, {runner_cfg.epochs} * {runner_cfg.eval_ep}
        num_warmups: 100000
    batch_sampler_cfg:
        batch_size: 1

dnerf_networks: &dnerf_networks
    geo_use_xyzt_feat: False
    parameterizer_cfg:
        type: NoopRegressor
    xyzt_embedder_cfg:
        type: ComposedXyztEmbedder
        xyz_embedder_cfg:
            type: PositionalEncodingEmbedder
            multires: 10
            in_dim: 3
        t_embedder_cfg:
            type: PositionalEncodingEmbedder
            multires: 10
            in_dim: 1
    deformer_cfg:
        type: DisplacementRegressor
        out_dim: 3
        scale: 1.0
    xyz_embedder_cfg:
        type: PositionalEncodingEmbedder
        multires: 10
    geometry_cfg:
        type: SplitRegressor
        width: 256
        depth: 8
        activs: [ReLU, Identity] # has to be ReLU
    dir_embedder_cfg:
        type: PositionalEncodingEmbedder
        multires: 4
    rgb_embedder_cfg:
        type: EmptyEmbedder
    appearance_cfg:
        type: MlpRegressor
        width: 128
        depth: 1
        out_dim: 3

model_cfg:
    sampler_cfg:
        type: ImportanceSampler
        n_samples: [64, 128]
        normalize_weights: True
        weight_padding: 0.00001
        fine_freespace_ratio: 0.0
        concat_coarse_samples: True
    network_cfg:
        <<: *dnerf_networks
        network_cfgs:
            - 
              type: VolumetricVideoNetwork
              <<: *dnerf_networks
    supervisor_cfg:
        type: VolumetricVideoSupervisor
        img_loss_weight: 1.0
        img_loss_type: L2
        msk_loss_weight: 0.0
        prop_loss_weight: 0.0
        resd_loss_weight: 0.0
    renderer_cfg:
        normalize_weights: True
